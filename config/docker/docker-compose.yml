# BlackCnote Docker Compose - Optimized Volume Mapping
# ================================================
# CANONICAL PATHWAYS - DO NOT CHANGE
# Project Root: C:\Users\CASH AMERICA PAWN\Desktop\BlackCnote
# Theme Directory: C:\Users\CASH AMERICA PAWN\Desktop\BlackCnote\blackcnote
# WP-Content Directory: C:\Users\CASH AMERICA PAWN\Desktop\BlackCnote\blackcnote\wp-content
# Theme Files: C:\Users\CASH AMERICA PAWN\Desktop\BlackCnote\blackcnote\wp-content\themes\blackcnote
# ================================================
# Uses WSL2 absolute path format confirmed by testing

services:
  # WordPress Application with Enhanced Live Editing
  wordpress:
    image: wordpress:6.8-apache
    container_name: blackcnote-wordpress
    ports:
      - "8888:80"  # Expose WordPress on port 8888
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: blackcnote
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: blackcnote_password
      WORDPRESS_DEBUG: 1
      # Base URLs - will be overridden by docker-compose.override.yml
      WP_HOME: http://localhost:8888
      WP_SITEURL: http://localhost:8888
      WP_CONTENT_URL: http://localhost:8888/wp-content
      WP_DEBUG: true
      WP_DEBUG_LOG: true
      WP_DEBUG_DISPLAY: false
      SCRIPT_DEBUG: true
      SAVEQUERIES: true
      WP_CACHE: false
      FS_METHOD: direct
      WP_MEMORY_LIMIT: 256M
      WP_MAX_MEMORY_LIMIT: 512M
      DISALLOW_FILE_EDIT: true
      UPLOADS: wp-content/uploads
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('WP_DEBUG_LOG', true);
        define('SCRIPT_DEBUG', true);
        define('SAVEQUERIES', true);
        define('WP_CACHE', false);
        define('FS_METHOD', 'direct');
        define('WP_MEMORY_LIMIT', '256M');
        define('WP_MAX_MEMORY_LIMIT', '512M');
        define('DISALLOW_FILE_EDIT', true);
        define('UPLOADS', 'wp-content/uploads');
    volumes:
      # Fallback to Windows filesystem path since WSL2 volume mapping has issues
      - "C:\\Users\\CASH AMERICA PAWN\\Desktop\\BlackCnote\\blackcnote:/var/www/html:delegated"
      # Development tools and scripts
      - "./scripts:/var/www/html/scripts:delegated"
      # Logs for debugging
      - "./logs:/var/www/html/logs:delegated"
    depends_on:
      - mysql
      - redis
    networks:
      - blackcnote-network
    restart: unless-stopped
    # Enhanced file watching and performance
    tmpfs:
      - /tmp
      - /var/tmp

  # MySQL Database with Enhanced Performance
  mysql:
    image: mysql:8.0
    container_name: blackcnote-mysql
    environment:
      MYSQL_ROOT_PASSWORD: blackcnote_password
      MYSQL_DATABASE: blackcnote
      MYSQL_USER: blackcnote_user
      MYSQL_PASSWORD: blackcnote_password
      # Performance optimizations for development
      MYSQL_INNODB_BUFFER_POOL_SIZE: 256M
      MYSQL_INNODB_LOG_FILE_SIZE: 64M
      MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 2
    volumes:
      - mysql_data:/var/lib/mysql
      - "../db/blackcnote.sql:/docker-entrypoint-initdb.d/blackcnote.sql"
      # Live editing - Database dumps
      - "../db:/var/lib/mysql-dumps:delegated"
    ports:
      - "3306:3306"
    networks:
      - blackcnote-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M

  # Redis Cache with Enhanced Configuration
  redis:
    image: redis:7-alpine
    container_name: blackcnote-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      # Live editing - Redis configuration
      - "../redis.conf:/usr/local/etc/redis/redis.conf:ro"
    networks:
      - blackcnote-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf

  # React Development Server with Enhanced Live Editing
  react-app:
    build:
      context: ../../react-app
      dockerfile: Dockerfile.dev
    container_name: blackcnote-react
    ports:
      - "5174:5174"
    volumes:
      # Live editing - React source files with enhanced watching
      - "../../react-app/src:/app/src:delegated"
      - "../../react-app/public:/app/public:delegated"
      - "../../react-app/package.json:/app/package.json"
      - "../../react-app/package-lock.json:/app/package-lock.json"
      - "../../react-app/vite.config.js:/app/vite.config.js"
      - "../../react-app/tailwind.config.js:/app/tailwind.config.js"
      - "../../react-app/postcss.config.js:/app/postcss.config.js"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - NODE_ENV=development
    networks:
      - blackcnote-network
    restart: unless-stopped

  # Browsersync for Enhanced Live Reloading
  browsersync:
    image: node:18-alpine
    container_name: blackcnote-browsersync
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      # Fallback to Windows filesystem path since WSL2 volume mapping has issues
      - "C:\\Users\\CASH AMERICA PAWN\\Desktop\\BlackCnote\\blackcnote:/var/www/html:delegated"
      - "../../react-app/dist:/app/dist:delegated"
    working_dir: /app
    command: >
      sh -c "npm install -g browser-sync &&
             echo 'module.exports = { proxy: \"wordpress:80\", port: 3000, ui: { port: 3001 }, files: [\"/var/www/html/**/*.php\", \"/var/www/html/**/*.js\", \"/var/www/html/**/*.css\", \"/app/react/src/**/*.{js,jsx,ts,tsx}\"], notify: true, open: false };' > /app/browsersync-config.js &&
             browser-sync start --config browsersync-config.js"
    networks:
      - blackcnote-network
    restart: unless-stopped
    depends_on:
      - wordpress
      - react-app

  # File Watcher Service for Enhanced Live Editing
  file-watcher:
    image: node:18-alpine
    container_name: blackcnote-file-watcher
    volumes:
      # Fallback to Windows filesystem path since WSL2 volume mapping has issues
      - "C:\\Users\\CASH AMERICA PAWN\\Desktop\\BlackCnote\\blackcnote:/var/www/html:delegated"
      - "../../react-app:/app/react:delegated"
      - "../scripts:/app/scripts:delegated"
      - "./logs:/app/logs:delegated"
    working_dir: /app
    command: >
      sh -c "npm install -g chokidar-cli &&
             mkdir -p /app/logs &&
             chokidar '/var/www/html/**/*.{php,js,jsx,ts,tsx,css,scss,html}' '/app/react/src/**/*.{js,jsx,ts,tsx,css,scss}' 
                     --polling --interval 1000 
                     --event add,change,unlink 
                     --command 'echo \"[$(date)] File changed: $1\" >> /app/logs/file-changes.log'"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - NODE_ENV=development
    networks:
      - blackcnote-network
    restart: unless-stopped
    depends_on:
      - wordpress
      - react-app

  # Development Tools Container
  dev-tools:
    image: node:18-alpine
    container_name: blackcnote-dev-tools
    ports:
      - "9229:9229"  # Node.js debugging
    volumes:
      # Fallback to Windows filesystem path since WSL2 volume mapping has issues
      - "C:\\Users\\CASH AMERICA PAWN\\Desktop\\BlackCnote\\blackcnote:/var/www/html:delegated"
      - "../../react-app:/app/react:delegated"
      - "../scripts:/app/scripts:delegated"
      - "../tools:/app/tools:delegated"
    working_dir: /app
    command: >
      sh -c "npm install -g nodemon concurrently &&
             tail -f /dev/null"
    networks:
      - blackcnote-network
    restart: unless-stopped

  # PHPMyAdmin with Enhanced Features
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: blackcnote-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: blackcnote_password
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: http://localhost:8080/
    ports:
      - "8080:80"
    networks:
      - blackcnote-network
    restart: unless-stopped
    depends_on:
      - mysql

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog
    container_name: blackcnote-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - blackcnote-network
    restart: unless-stopped

  # Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander
    container_name: blackcnote-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - blackcnote-network
    restart: unless-stopped
    depends_on:
      - redis

  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: blackcnote-nginx-proxy
    ports:
      - "8888:80"
    volumes:
      - "../nginx/blackcnote-simple.conf:/etc/nginx/conf.d/default.conf"
      # Fallback to Windows filesystem path since WSL2 volume mapping has issues
      - "C:\\Users\\CASH AMERICA PAWN\\Desktop\\BlackCnote\\blackcnote:/var/www/html:delegated"
    depends_on:
      - wordpress
    networks:
      - blackcnote-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  blackcnote-network:
    driver: bridge 
